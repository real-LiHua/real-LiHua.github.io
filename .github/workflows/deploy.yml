name: Deploy to Codeberg Pages / GitHub Pages / IPFS

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Setup Node (Bun)
        uses: actions/setup-node@v5
        with:
          node-version: 24

      - name: Install
        run: |
          bun i
          cd node_modules/@ipshipyard/node-datachannel
          bun i
          cd -

      - name: Build
        run: bun run build

      - uses: cloudflare/wrangler-action@v3
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - run: rm -vr "./dist/_worker.js" "./dist/.assetsignore"

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: "./dist/"

  codeberg:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: github-pages

      - name: Extract artifact
        run: tar xvf artifact.tar --recursive-unlink

      - name: Create SSH directory
        run: mkdir ~/.ssh

      - name: Add Codeberg to known_hosts
        run: echo "codeberg.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIVIC02vnjFyL+I4RHfvIGNtOgJMe769VTF1VR4EB3ZB" >> ~/.ssh/known_hosts

      - name: Write SSH key
        run: echo "${{ secrets.CODEBERG_PAGES }}" > ~/.ssh/id_ed25519

      - name: Set SSH key permissions
        run: chmod 400 ~/.ssh/id_ed25519

      - name: Clone repository
        run: git clone --bare ssh://git@codeberg.org/lihua/pages .git

      - name: Unset core.bare
        run: git config unset core.bare

      - name: Set user email
        run: git config set user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set user name
        run: git config set user.name "github-actions[bot]"

      - name: Add files
        run: git add .

      - name: Commit changes
        run: git commit -m "Update" || true

      - name: Push changes
        run: git push -f origin main

  github:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  ipfs:
    if: ${{ false }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: github-pages

      - name: Extract artifact
        run: tar xvf artifact.tar --recursive-unlink

      - name: Setup Kubo CLI
        uses: ipfs/download-ipfs-distribution-action@v1

      - name: ipfs init
        run: ipfs init

      - name: Set pin name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '/' '-')
          COMMIT_SHA="${{ github.event.pull_request.head.sha || github.sha }}"
          COMMIT_SHA_SHORT="${COMMIT_SHA:0:7}"

          # Set the pin name
          PIN_NAME="${REPO_NAME}-${COMMIT_SHA_SHORT}"

          echo "pin_name=${PIN_NAME}" >> "$GITHUB_ENV"
          echo "Using pin name: ${PIN_NAME}"

      - name: Pin CID to Pinata
        run: |
          CID=$(ipfs add --cid-version 1 --chunker size-1048576 -Q -r .)
          ipfs pin remote service add pinata "https://api.pinata.cloud/psa" ${{ secrets.PINATA_JWT_TOKEN }}
          ipfs pin remote add --service=pinata --background --name="${pin_name}" $CID
          echo "âœ… Pinned CID ${CID} to Pinata" >> $GITHUB_STEP_SUMMARY
